{"version":3,"sources":["WindSpeedUnitSelector.module.css","Settings.module.css","state.tsx","WindSpeedUnitSelector.tsx","WindToSail.tsx","Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","persistAtom","recoilPersist","key","windSpeedUnitState","atom","default","effects_UNSTABLE","weightState","WindSpeedUnitSelector","useRecoilState","currentUnit","setWindSpeedUnit","isSelectedStyle","unit","styles","active","inactive","ktsStyle","ktsButton","mpsStyle","mpsButton","className","container","onClick","windRangeKts","Array","from","_","i","windRangeMps","WindToSail","windSpeedUnit","useRecoilValue","weight","windRange","WindRangeToSails","props","sails","map","windSpeed","toFixed","sailSize","windStrengthKnots","windStrengthMps","WindAndSailSize","style","lineHeight","Settings","setWeight","controls","minus","plus","App","basename","hashType","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5873f48b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WindSpeedUnitSelector_container__8Am5e\",\"ktsButton\":\"WindSpeedUnitSelector_ktsButton__1_Ptl\",\"mpsButton\":\"WindSpeedUnitSelector_mpsButton__rsghB\",\"inactive\":\"WindSpeedUnitSelector_inactive__dwvnQ\",\"active\":\"WindSpeedUnitSelector_active__1kF61\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__3vds1\",\"controls\":\"Settings_controls__1jFzj\",\"minus\":\"Settings_minus__Sfg5D\",\"plus\":\"Settings_plus__1bzCT\"};","import { atom } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist({ key: \"config\" });\n\nexport const windSpeedUnitState = atom({\n  key: \"windSpeedUnit\",\n  default: \"kts\",\n  effects_UNSTABLE: [persistAtom]\n});\n\nexport const weightState = atom({\n  key: \"weight\",\n  default: 82,\n  effects_UNSTABLE: [persistAtom]\n});","import styles from \"./WindSpeedUnitSelector.module.css\";\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { windSpeedUnitState } from \"./state\";\n\nexport const WindSpeedUnitSelector: React.FC = () => {\n  const [currentUnit, setWindSpeedUnit] = useRecoilState(windSpeedUnitState);\n  \n  const isSelectedStyle = (unit: string) =>\n    currentUnit === unit ? styles.active : styles.inactive;\n  const ktsStyle = styles.ktsButton + \" \" + isSelectedStyle(\"kts\");\n  const mpsStyle = styles.mpsButton + \" \" + isSelectedStyle(\"mps\");\n  \n  return (\n    <div className={styles.container}>\n      <button className={ktsStyle} onClick={() => setWindSpeedUnit(\"kts\")}>\n        kts\n      </button>\n      <button className={mpsStyle} onClick={() => setWindSpeedUnit(\"mps\")}>\n        m/s\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { windSpeedUnitState, weightState } from \"./state\";\nimport { WindSpeedUnitSelector } from \"./WindSpeedUnitSelector\";\n\nconst windRangeKts = Array.from(new Array(23), (_, i) => i + 12);\nconst windRangeMps = Array.from(new Array(23), (_, i) => i / 2 + 6);\n\nconst sailSizeForWindKts = (weight: number, windStrengthKnots: number) =>\n  (1.34 * weight) / windStrengthKnots;\n\nconst sailSizeForWindMps = (weight: number, windStrengthMps: number) =>\n  (0.6893 * weight) / windStrengthMps;\n\nexport const WindToSail: React.FC = () => {\n  const windSpeedUnit = useRecoilValue(windSpeedUnitState);\n  const weight = useRecoilValue(weightState);\n\n  return (\n    <div>\n      <WindSpeedUnitSelector />\n      <WindRangeToSails\n        windRange={windSpeedUnit === \"kts\" ? windRangeKts : windRangeMps}\n        weight={weight}\n        unit={windSpeedUnit}\n      />\n    </div>\n  );\n};\n\ninterface WindRangeToSailsProps {\n  windRange: Array<number>;\n  weight: number;\n  unit: string;\n}\n\nconst WindRangeToSails: React.FC<WindRangeToSailsProps> = props => {\n  if (props.unit === \"kts\") {\n    const sails = props.windRange.map(windSpeed => (\n      <WindAndSailSize\n        key={windSpeed}\n        windSpeed={windSpeed.toFixed(0)}\n        unit=\"kts\"\n        sailSize={sailSizeForWindKts(props.weight, windSpeed).toFixed(1)}\n      />\n    ));\n    return <div>{sails}</div>;\n  } else if (props.unit === \"mps\") {\n    const sails = props.windRange.map(windSpeed => (\n      <WindAndSailSize\n        key={windSpeed}\n        windSpeed={windSpeed.toFixed(1)}\n        unit=\"m/s\"\n        sailSize={sailSizeForWindMps(props.weight, windSpeed).toFixed(1)}\n      />\n    ));\n    return <div>{sails}</div>;\n  } else {\n    return <div>TBD</div>;\n  }\n};\n\ninterface WindAndSailSizeProps {\n  windSpeed: string;\n  sailSize: string;\n  unit: string;\n}\n\nconst WindAndSailSize: React.FC<WindAndSailSizeProps> = props => {\n  // TODO: add a proper class\n  const style = {\n    lineHeight: \"200%\"\n  }\n  return (\n    <div style={style}>\n      {props.windSpeed} {props.unit} = {props.sailSize} m2\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport styles from \"./Settings.module.css\";\nimport { weightState } from \"./state\";\n\nexport const Settings: React.FC = () => {\n  const [weight, setWeight] = useRecoilState(weightState);\n  const increment = () => setWeight(weight + 1);\n  const decrement = () => setWeight(weight - 1);\n  return (\n    <div className={styles.container}>\n      <div>Weight</div>\n      <div className={styles.controls}>\n        <button className={styles.minus} onClick={() => decrement()} />\n        {weight}\n        <button className={styles.plus} onClick={() => increment()} />\n      </div>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport {\n  HashRouter as Router,\n  NavLink,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nimport { RecoilRoot } from \"recoil\";\nimport { WindToSail } from \"./WindToSail\";\nimport { Settings } from \"./Settings\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RecoilRoot>\n        <Router basename=\"/\" hashType=\"noslash\">\n          <header>\n            <div className=\"App-menu\">\n              <NavLink to=\"/\" className=\"App-link\" exact>\n                <div className=\"App-menu-item\">Wind</div>\n              </NavLink>\n              <NavLink to=\"/my\" className=\"App-link\">\n                <div className=\"App-menu-item\">My Sails</div>\n              </NavLink>\n              <NavLink to=\"/settings\" className=\"App-link\">\n                <div className=\"App-menu-item\">Settings</div>\n              </NavLink>\n            </div>\n          </header>\n          <Switch>\n            <Route path=\"/\" exact>\n              <WindToSail />\n            </Route>\n            <Route path=\"/my\">\n              <div>Coming soon</div>\n            </Route>\n            <Route path=\"/settings\">\n              <Settings />\n            </Route>\n          </Switch>\n        </Router>\n      </RecoilRoot>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}