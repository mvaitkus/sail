{"version":3,"sources":["logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SailSizes","props","sails","Array","from","x","i","map","windKts","windStrengthKts","sailSize","windStrengthKnots","weight","WindAndSailSize","toFixed","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAAe,G,KAAA,IAA0B,kC,cCmBzC,IAAMA,EAAsC,SAAAC,GAC1C,IAIMC,EADuBC,MAAMC,KAAK,IAAID,MAAM,KAAK,SAACE,EAAGC,GAAJ,OAAUA,EAAI,MAClCC,KAAI,SAAAC,GAAO,OAC5C,cAAC,EAAD,CAEEC,gBAAiBD,EACjBE,UARqBC,EAQKH,EAP3B,KAAOP,EAAMW,OAAUD,IAKjBH,GANe,IAACG,KAWzB,OAAO,8BAAMT,KAQTW,EAAkD,SAAAZ,GACtD,OACE,gCACGA,EAAMQ,gBADT,UACiCR,EAAMS,SAASI,QAAQ,GADxD,UAMWC,EA3Cf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAAC,EAAD,CAAWP,OAAQ,WCKZQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6ffda16b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <SailSizes weight={82} />\n      </header>\n    </div>\n  );\n}\n\ninterface SailSizesProps {\n  weight: number;\n}\n\nconst SailSizes: React.FC<SailSizesProps> = props => {\n  const sailSizeForWind = (windStrengthKnots: number) =>\n    (1.34 * props.weight) / windStrengthKnots;\n\n  const interestingWindRange = Array.from(new Array(27), (x, i) => i + 12);\n  const sails = interestingWindRange.map(windKts => (\n    <WindAndSailSize\n      key={windKts}\n      windStrengthKts={windKts}\n      sailSize={sailSizeForWind(windKts)}\n    />\n  ));\n  return <div>{sails}</div>;\n};\n\ninterface WindAndSailSizeProps {\n  windStrengthKts: number;\n  sailSize: number;\n}\n\nconst WindAndSailSize: React.FC<WindAndSailSizeProps> = props => {\n  return (\n    <div>\n      {props.windStrengthKts} kts = {props.sailSize.toFixed(1)} m2\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}