{"version":3,"sources":["windunit/WindSpeedUnitSelector.module.css","mysails/SailList.module.css","settings/Settings.module.css","common/state.tsx","windunit/WindSpeedUnitSelector.tsx","wind/WindToSail.tsx","math/index.ts","settings/Settings.tsx","mysails/SailsList.tsx","mysails/MySails.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","persistAtom","recoilPersist","key","windSpeedUnitState","atom","default","effects_UNSTABLE","weightState","sailsState","WindSpeedUnitSelector","useRecoilState","currentUnit","setWindSpeedUnit","isSelectedStyle","unit","styles","active","inactive","ktsStyle","ktsButton","mpsStyle","mpsButton","className","container","onClick","windRangeKts","Array","from","_","i","windRangeMps","WindToSail","windSpeedUnit","useRecoilValue","weight","WindRangeToSails","props","sails","map","windSpeed","toFixed","sailSize","windStrengthKnots","windStrengthMps","WindAndSailSize","style","lineHeight","Settings","setWeight","controls","minus","plus","SailsList","setSails","weigt","sortedSails","sort","a","b","size","sail","windRange","ideal","min","max","windForSailKts","windForSailMps","sailContainer","name","type","id","sailsWithoutRemoved","filter","removeSail","rangeContainer","rangeItem","pageState","MySails","page","setPage","AddSail","useSetRecoilState","validateName","value","trim","validateSize","Number","isNaN","initialValues","sailName","onSubmit","values","setSubmitting","v4","errors","touched","isValidating","htmlFor","placeholder","validate","step","App","basename","hashType","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af8b301b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WindSpeedUnitSelector_container__3Il07\",\"ktsButton\":\"WindSpeedUnitSelector_ktsButton__rqIAw\",\"mpsButton\":\"WindSpeedUnitSelector_mpsButton__kKddL\",\"inactive\":\"WindSpeedUnitSelector_inactive__Nwo5P\",\"active\":\"WindSpeedUnitSelector_active__3rJPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sailContainer\":\"SailList_sailContainer__H4QIv\",\"rangeContainer\":\"SailList_rangeContainer__1ItrP\",\"rangeItem\":\"SailList_rangeItem__2jhCT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__1w3Fz\",\"controls\":\"Settings_controls__TehG4\",\"minus\":\"Settings_minus__w5D37\",\"plus\":\"Settings_plus__1XKZO\"};","import { atom } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist({ key: \"config\" });\n\nexport const windSpeedUnitState = atom({\n  key: \"windSpeedUnit\",\n  default: \"kts\",\n  effects_UNSTABLE: [persistAtom]\n});\n\nexport const weightState = atom({\n  key: \"weight\",\n  default: 82,\n  effects_UNSTABLE: [persistAtom]\n});\n\nexport const sailsState = atom<Sail[]>({\n  key: \"sails\",\n  default: [] as Sail[],\n  effects_UNSTABLE: [persistAtom]\n})\n\nexport interface Sail {\n  id: string,\n  name: string;\n  size: number;\n}","import styles from \"./WindSpeedUnitSelector.module.css\";\nimport React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { windSpeedUnitState } from \"../common/state\";\n\nexport const WindSpeedUnitSelector: React.FC = () => {\n  const [currentUnit, setWindSpeedUnit] = useRecoilState(windSpeedUnitState);\n  \n  const isSelectedStyle = (unit: string) =>\n    currentUnit === unit ? styles.active : styles.inactive;\n  const ktsStyle = styles.ktsButton + \" \" + isSelectedStyle(\"kts\");\n  const mpsStyle = styles.mpsButton + \" \" + isSelectedStyle(\"mps\");\n  \n  return (\n    <div className={styles.container}>\n      <button className={ktsStyle} onClick={() => setWindSpeedUnit(\"kts\")}>\n        kts\n      </button>\n      <button className={mpsStyle} onClick={() => setWindSpeedUnit(\"mps\")}>\n        m/s\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { windSpeedUnitState, weightState } from \"../common/state\";\nimport { WindSpeedUnitSelector } from \"../windunit\";\nimport { sailSizeForWindKts, sailSizeForWindMps } from \"../math\";\n\nconst windRangeKts = Array.from(new Array(23), (_, i) => i + 12);\nconst windRangeMps = Array.from(new Array(23), (_, i) => i / 2 + 6);\n\nexport const WindToSail: React.FC = () => {\n  const windSpeedUnit = useRecoilValue(windSpeedUnitState);\n  const weight = useRecoilValue(weightState);\n\n  return (\n    <div>\n      <WindSpeedUnitSelector />\n      <WindRangeToSails\n        weight={weight}\n        unit={windSpeedUnit}\n      />\n    </div>\n  );\n};\n\ninterface WindRangeToSailsProps {\n  weight: number;\n  unit: string;\n}\n\nconst WindRangeToSails: React.FC<WindRangeToSailsProps> = props => {\n  if (props.unit === \"kts\") {\n    const sails = windRangeKts.map(windSpeed => (\n      <WindAndSailSize\n        key={windSpeed}\n        windSpeed={windSpeed.toFixed(0)}\n        unit=\"kts\"\n        sailSize={sailSizeForWindKts(props.weight, windSpeed).toFixed(1)}\n      />\n    ));\n    return <div>{sails}</div>;\n  } else if (props.unit === \"mps\") {\n    const sails = windRangeMps.map(windSpeed => (\n      <WindAndSailSize\n        key={windSpeed}\n        windSpeed={windSpeed.toFixed(1)}\n        unit=\"m/s\"\n        sailSize={sailSizeForWindMps(props.weight, windSpeed).toFixed(1)}\n      />\n    ));\n    return <div>{sails}</div>;\n  } else {\n    return <div>TBD</div>;\n  }\n};\n\ninterface WindAndSailSizeProps {\n  windSpeed: string;\n  sailSize: string;\n  unit: string;\n}\n\nconst WindAndSailSize: React.FC<WindAndSailSizeProps> = props => {\n  // TODO: add a proper class\n  const style = {\n    lineHeight: \"200%\"\n  }\n  return (\n    <div style={style}>\n      {props.windSpeed} {props.unit} = {props.sailSize} m2\n    </div>\n  );\n};\n","export const sailSizeForWindKts = (weight: number, windStrengthKnots: number) =>\n    (1.34 * weight) / windStrengthKnots;\n\nexport const sailSizeForWindMps = (weight: number, windStrengthMps: number) =>\n    (0.6893 * weight) / windStrengthMps;\n\n\nexport interface TypicalWindRange {\n    ideal: number,\n    min: number,\n    max: number\n}\n\nexport const windForSailMps = (weight: number, sailSize: number): TypicalWindRange => {\n    const ideal = (0.6893 * weight) / sailSize\n    const min = ideal * 0.8\n    const max = ideal * 1.2\n    return { ideal, min, max }\n}\n\nexport const windForSailKts = (weight: number, sailSize: number): TypicalWindRange => {\n    const ideal = (1.34 * weight) / sailSize\n    const min = ideal * 0.8\n    const max = ideal * 1.2\n    return { ideal, min, max }\n}\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport styles from \"./Settings.module.css\";\nimport { weightState } from \"../common/state\";\n\nexport const Settings: React.FC = () => {\n  const [weight, setWeight] = useRecoilState(weightState);\n  const increment = () => setWeight(weight + 1);\n  const decrement = () => setWeight(weight - 1);\n  return (\n    <div className={styles.container}>\n      <div>Weight</div>\n      <div className={styles.controls}>\n        <button className={styles.minus} onClick={() => decrement()} />\n        {weight}\n        <button className={styles.plus} onClick={() => increment()} />\n      </div>\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { sailsState, weightState, windSpeedUnitState } from \"../common/state\";\nimport { windForSailKts, windForSailMps } from \"../math\";\nimport styles from \"./SailList.module.css\";\n\nexport const SailsList: FC = () => {\n  const [sails, setSails] = useRecoilState(sailsState);\n  const unit = useRecoilValue(windSpeedUnitState);\n  const weigt = useRecoilValue(weightState);\n\n  function removeSail(id: string) {\n    const sailsWithoutRemoved = sails.filter(sail => sail.id !== id);\n    setSails(sailsWithoutRemoved);\n  }\n\n  const sortedSails = [...sails].sort(function (a, b) {\n    return b.size - a.size;\n  });\n\n  const windRangeForUnit = (size: number) => unit === \"kts\" ? windForSailKts(weigt, size) : windForSailMps(weigt, size);\n\n  return (\n    <div>\n      {sortedSails.map(sail => {\n        const windRange = windRangeForUnit(sail.size)\n        return (\n          <div key={sail.id}>\n            <div className={styles.sailContainer}>\n              <div>{sail.size.toFixed(1)}</div>\n              <div>{sail.name}</div>\n              <div>\n                <button type=\"button\" onClick={_ => removeSail(sail.id)}>\n                  X\n                </button>\n              </div>\n            </div>\n            <div className={styles.rangeContainer}>\n              <div className={styles.rangeItem}>low: {windRange.min.toFixed(1)}</div>\n              <div className={styles.rangeItem}>ideal: {windRange.ideal.toFixed(1)}</div>\n              <div className={styles.rangeItem}>top: {windRange.max.toFixed(1)}</div>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n","import { FC } from \"react\";\nimport {\n  useRecoilState,\n  useSetRecoilState,\n  atom\n} from \"recoil\";\nimport { sailsState } from \"../common/state\";\nimport { v4 } from \"uuid\";\n\nimport { Formik, Field, Form, FormikHelpers } from \"formik\";\nimport { SailsList } from \"./SailsList\";\n\nimport { WindSpeedUnitSelector } from \"../windunit\";\n\nconst pageState = atom({\n  key: \"mySailsPageState\",\n  default: \"list\" // other option is \"new\"\n});\n\nexport const MySails: FC = () => {\n  const [page, setPage] = useRecoilState(pageState);\n\n  if (page === \"list\") {\n    return (\n      <div>\n        This is work in progress, proper visual design TBD\n        <WindSpeedUnitSelector />\n        <SailsList />\n        <button onClick={_ => setPage(\"new\")}>Add new sail</button>\n      </div>\n    );\n  } else {\n    return <AddSail />;\n  }\n};\n\ninterface NewSail {\n  sailName: string;\n  size: string;\n}\n\n// TODO: extract to separate component (going back should probably come as function instead of depending on page state)\nconst AddSail: FC = () => {\n  const setPage = useSetRecoilState(pageState);\n  const [sails, setSails] = useRecoilState(sailsState);\n\n  function validateName(value: string) {\n    if (value.trim() === \"\") {\n      return \"Sail name must be not empty!\";\n    }\n  }\n\n  function validateSize(value: string) {\n    const size = Number(value);\n    if (Number.isNaN(size)) {\n      return \"Please enter a number for sail size!\";\n    } else if (size < 1.0) {\n      return \"Size must be more than 1.0\";\n    } else if (size > 12.0) {\n      return \"No one sails with sails bigger than 12.0; As a matter of fact, I wouldn't sail with 12.0 either, it's too big!\";\n    }\n  }\n\n  return (\n    <div>\n      <div>Adding new sail</div>\n      <div>\n        <Formik\n          initialValues={{\n            sailName: \"\",\n            size: \"\"\n          }}\n          onSubmit={(\n            values: NewSail,\n            { setSubmitting }: FormikHelpers<NewSail>\n          ) => {\n            const sail = {\n              id: v4(),\n              name: values.sailName,\n              size: Number(values.size)\n            };\n            setSails([...sails, sail]);\n            setPage(\"list\");\n            setSubmitting(false);\n          }}\n        >\n          {({ errors, touched, isValidating }) => (\n            <Form>\n              <div>\n                <label htmlFor=\"sailName\">Name</label>\n                <Field\n                  id=\"sailName\"\n                  name=\"sailName\"\n                  placeholder=\"Goya Banzai\"\n                  validate={validateName}\n                />\n                {errors.sailName && touched.sailName && (\n                  <div>{errors.sailName}</div>\n                )}\n              </div>\n\n              <div>\n                <label htmlFor=\"size\">Size</label>\n                <Field\n                  type=\"number\"\n                  id=\"size\"\n                  name=\"size\"\n                  placeholder=\"4.7\"\n                  step=\"0.1\"\n                  validate={validateSize}\n                />\n                {errors.size && touched.size && <div>{errors.size}</div>}\n              </div>\n\n              <div>\n                <button type=\"submit\">Add</button>\n                <button type=\"button\" onClick={_ => setPage(\"list\")}>\n                  Cancel\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport {\n  HashRouter as Router,\n  NavLink,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nimport { RecoilRoot } from \"recoil\";\nimport { WindToSail } from \"../wind\";\nimport { Settings } from \"../settings\";\nimport { MySails } from \"../mysails\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <RecoilRoot>\n        <Router basename=\"/\" hashType=\"noslash\">\n          <header>\n            <div className=\"App-menu\">\n              <NavLink to=\"/\" className=\"App-link\" exact>\n                <div className=\"App-menu-item\">Wind</div>\n              </NavLink>\n              <NavLink to=\"/my\" className=\"App-link\">\n                <div className=\"App-menu-item\">My Sails</div>\n              </NavLink>\n              <NavLink to=\"/settings\" className=\"App-link\">\n                <div className=\"App-menu-item\">Settings</div>\n              </NavLink>\n            </div>\n          </header>\n          <Switch>\n            <Route path=\"/\" exact>\n              <WindToSail />\n            </Route>\n            <Route path=\"/my\">\n              <MySails />\n            </Route>\n            <Route path=\"/settings\">\n              <Settings />\n            </Route>\n          </Switch>\n        </Router>\n      </RecoilRoot>\n    </div>\n  );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}